import{_ as s,o as a,c as n,V as p}from"./chunks/framework.48c56699.js";const m=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[],"relativePath":"notes/springcloud/Nginx.md","filePath":"notes/springcloud/Nginx.md","lastUpdated":null}'),l={name:"notes/springcloud/Nginx.md"},o=p(`<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><p>Nginx是高性能Http和反向代理服务器。 Nginx是一个<strong>静态的Http服务器</strong>，那么就可以处理Http请求，能够对<strong>静态资源</strong>进行处理，但是不能对动态请求做出处理，因此可以支持的并发是非常高的。 因此利用这一特性，可以利用反向代理实现负载均衡。</p><ul><li>将静态资源交给Nginx处理</li><li>动态资源，nginx就利用反向代理、负载均衡来访问真实的服务器</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/jpeg/29136536/1685958024004-93cd95bf-6da5-4c71-8f7c-ce47d548d2a9.jpeg" alt=""></p><h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h1><p>接下来的是在Windows下的安装：</p><ol><li>点击下面的链接，选择稳定版下载</li></ol><p><a href="http://nginx.org/en/download.html" target="_blank" rel="noreferrer">nginx: download</a></p><ol start="2"><li>下载完成后，解压，解压后的目录结构</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29136536/1685946643889-d7a0aa08-8a65-43d2-896d-6e080dd9f975.png#averageHue=%23fcfbf9&amp;clientId=u1f852883-4c7c-4&amp;from=paste&amp;height=175&amp;id=u7add4dd3&amp;originHeight=193&amp;originWidth=629&amp;originalType=binary&amp;ratio=1.100000023841858&amp;rotation=0&amp;showTitle=false&amp;size=16793&amp;status=done&amp;style=none&amp;taskId=u1634efeb-c799-4854-8cc1-9ab7e4ce173&amp;title=&amp;width=571.8181694243568" alt="image.png"></p><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><p>点击nginx.exe启动 或者在命令行下，在此目录下，利用命令启动</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 或者</span></span>
<span class="line"><span style="color:#FFCB6B;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre></div><p>浏览器访问<code>http://localhost:80</code>，看到如下页面，代表启动成功 <img src="https://cdn.nlark.com/yuque/0/2023/png/29136536/1685946981525-5923c062-f211-4b08-80cd-c0b78a40d3df.png#averageHue=%23fcfbfa&amp;clientId=u1f852883-4c7c-4&amp;from=paste&amp;height=296&amp;id=ua054eaca&amp;originHeight=326&amp;originWidth=1059&amp;originalType=binary&amp;ratio=1.100000023841858&amp;rotation=0&amp;showTitle=false&amp;size=19211&amp;status=done&amp;style=none&amp;taskId=u6599cc91-3291-4d00-b13d-934fc61d751&amp;title=&amp;width=962.7272518607215" alt="image.png"></p><h2 id="关闭" tabindex="-1">关闭 <a class="header-anchor" href="#关闭" aria-label="Permalink to &quot;关闭&quot;">​</a></h2><p><em>关闭掉命令行窗口后，Nginx不会关闭，而是继续在后台运行。</em> 命令行，进入Nginx的根目录，就是有nginx.exe的那一层目录。 <strong>执行命令</strong></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 正常关闭</span></span>
<span class="line"><span style="color:#FFCB6B;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 强制退出</span></span>
<span class="line"><span style="color:#FFCB6B;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span></span></code></pre></div><p>再次访问<code>http://localhost:80</code><img src="https://cdn.nlark.com/yuque/0/2023/png/29136536/1685947199113-6e5975e9-c34a-4c95-b7d2-a011ef58af4c.png#averageHue=%23fefefe&amp;clientId=u1f852883-4c7c-4&amp;from=paste&amp;height=640&amp;id=u74849e71&amp;originHeight=704&amp;originWidth=1105&amp;originalType=binary&amp;ratio=1.100000023841858&amp;rotation=0&amp;showTitle=false&amp;size=23124&amp;status=done&amp;style=none&amp;taskId=u83a4338a-1061-4ee8-b7c4-2982d9acd07&amp;title=&amp;width=1004.5454327725187" alt="image.png"> 关闭Nginx成功</p><h1 id="静态资源部署" tabindex="-1">静态资源部署 <a class="header-anchor" href="#静态资源部署" aria-label="Permalink to &quot;静态资源部署&quot;">​</a></h1><p>_nginx_每次启动时，都会加载<code>conf/nginx.conf</code>配置文件，这个配置文件中定义着nginx服务器相关的配置。</p><p>打开Nginx根目录下<code>conf/nginx.conf</code>, <img src="https://cdn.nlark.com/yuque/0/2023/png/29136536/1685947622535-5d9a7fc4-5e78-4932-a512-16eaa409f4f9.png#averageHue=%23fdfcfb&amp;clientId=u1f852883-4c7c-4&amp;from=paste&amp;height=676&amp;id=u797f33e8&amp;originHeight=744&amp;originWidth=1829&amp;originalType=binary&amp;ratio=1.100000023841858&amp;rotation=0&amp;showTitle=false&amp;size=174527&amp;status=done&amp;style=none&amp;taskId=u038f0fd6-5cb4-40ac-9e48-e252a0d657c&amp;title=&amp;width=1662.7272366886305" alt="image.png"> 所以，了解了Nginx代理静态资源的原理后。 <strong>我们将前端打包后的静态资源，例如html、css、js等文件，可以直接扔在nginx根目录下的html中，并修改</strong><code>**nginx.conf**</code><strong>中资源的首页文件</strong> 也可以直接在<code>nginx</code>根目录下，将我们打包后的文件扔在根目录，并修改<code>nginx.conf</code>中资源目录和首页文件。 例如： 我将打包后的文件夹，直接扔在nginx根目录 <img src="https://cdn.nlark.com/yuque/0/2023/png/29136536/1685947986594-e6a895f2-d390-4d1c-966f-67e72b045fd3.png#averageHue=%23fcfbfa&amp;clientId=u1f852883-4c7c-4&amp;from=paste&amp;height=274&amp;id=uaabf1ffc&amp;originHeight=301&amp;originWidth=766&amp;originalType=binary&amp;ratio=1.100000023841858&amp;rotation=0&amp;showTitle=false&amp;size=32184&amp;status=done&amp;style=none&amp;taskId=u0d136141-aa05-452a-bde8-cc3daf81fb1&amp;title=&amp;width=696.3636212703614" alt="image.png"> 修改配置文件<code>nginx.conf</code><img src="https://cdn.nlark.com/yuque/0/2023/png/29136536/1685948105871-9f898efe-df95-4d82-af3d-583f7cbab8af.png#averageHue=%23fdfcfc&amp;clientId=u1f852883-4c7c-4&amp;from=paste&amp;height=454&amp;id=u8dc24f04&amp;originHeight=499&amp;originWidth=1046&amp;originalType=binary&amp;ratio=1.100000023841858&amp;rotation=0&amp;showTitle=false&amp;size=29112&amp;status=done&amp;style=none&amp;taskId=u0c0716c2-a5ef-4034-a970-8f42829126f&amp;title=&amp;width=950.9090702986919" alt="image.png"> 重启Nginx，访问即可</p><h1 id="nginx常用命令" tabindex="-1">Nginx常用命令 <a class="header-anchor" href="#nginx常用命令" aria-label="Permalink to &quot;Nginx常用命令&quot;">​</a></h1><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 启动nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">nginx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 或</span></span>
<span class="line"><span style="color:#FFCB6B;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 关闭nginx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 正常退出</span></span>
<span class="line"><span style="color:#FFCB6B;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 强制推出</span></span>
<span class="line"><span style="color:#FFCB6B;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 在运行的状态下</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 重启nginx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 重新加载配置文件</span></span>
<span class="line"><span style="color:#FFCB6B;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reload</span></span></code></pre></div><h1 id="多虚拟主机" tabindex="-1">多虚拟主机 <a class="header-anchor" href="#多虚拟主机" aria-label="Permalink to &quot;多虚拟主机&quot;">​</a></h1><p><strong>虚拟主机</strong>的意思就是在我们的nginx中部署多个项目，看起来就好像有了多台服务器一样。 在_conf/nginx.conf_配置文件中，是这样的</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">worker_processes </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">events</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> worker_connections </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">http</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">      mime.types</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> default_type </span><span style="color:#A6ACCD;"> application/octet-stream</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> sendfile </span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;"> on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;"># 端口</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;"> localhost</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;"># 域名或ip</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">  dist</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;"># 默认资源的目录</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;"> index.html index.htm</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;"># 默认访问资源名称</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> error_page </span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">502</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">503</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">504</span><span style="color:#A6ACCD;">  /50x.html</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;"># 错误页面</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/50x.html </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">  html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h2 id="端口绑定" tabindex="-1">端口绑定 <a class="header-anchor" href="#端口绑定" aria-label="Permalink to &quot;端口绑定&quot;">​</a></h2><p><strong>在</strong><em><strong>http</strong></em><strong>节点下，一个</strong><em><strong>server</strong></em><strong>就是一个应用，因此我们可以通过配置多个</strong><em><strong>server</strong></em><strong>来达到配置多虚拟主机的目的</strong><img src="https://cdn.nlark.com/yuque/0/2023/png/29136536/1685949246587-04f384b3-ced6-41cf-8052-72e6d1a6ab9e.png#averageHue=%23fdfdfc&amp;clientId=u73ed548c-f33e-4&amp;from=paste&amp;height=702&amp;id=udcd7e778&amp;originHeight=772&amp;originWidth=1350&amp;originalType=binary&amp;ratio=1.100000023841858&amp;rotation=0&amp;showTitle=false&amp;size=70867&amp;status=done&amp;style=none&amp;taskId=u06d27552-12aa-4632-9ad2-9e34663e913&amp;title=&amp;width=1227.2727006723078" alt="image.png"></p><h2 id="域名绑定" tabindex="-1">域名绑定 <a class="header-anchor" href="#域名绑定" aria-label="Permalink to &quot;域名绑定&quot;">​</a></h2><p>通过不同域名的方式来达到虚拟主机的目的。 <img src="https://cdn.nlark.com/yuque/0/2023/png/29136536/1685951051910-0cd92770-fe4a-48eb-ba49-a6987f92eada.png#averageHue=%23fdfdfc&amp;clientId=u73ed548c-f33e-4&amp;from=paste&amp;height=696&amp;id=u3da06bf2&amp;originHeight=766&amp;originWidth=1367&amp;originalType=binary&amp;ratio=1.100000023841858&amp;rotation=0&amp;showTitle=false&amp;size=57938&amp;status=done&amp;style=none&amp;taskId=u5028fa34-88e6-49b1-a5d9-20fffa2b3dc&amp;title=&amp;width=1242.727245791885" alt="image.png"></p><h1 id="反向代理" tabindex="-1">反向代理 <a class="header-anchor" href="#反向代理" aria-label="Permalink to &quot;反向代理&quot;">​</a></h1><p>首先要知道什么是<code>正向代理</code><img src="https://cdn.nlark.com/yuque/0/2023/jpeg/29136536/1685951686936-d82b7dd1-7d2e-47f5-a4b5-0a8c71119c8e.jpeg" alt=""><strong>正向代理的目标是客户端，帮助客户端来访问服务器</strong></p><p>来看<code>反向代理</code><img src="https://cdn.nlark.com/yuque/0/2023/jpeg/29136536/1685955587732-b779bf0e-7cfc-4496-b445-d2560385bc3c.jpeg" alt=""><strong>反向代理的目标是互联网，用户只需要访问nginx，具体访问的是哪个服务器，用户不知道，多目标服务器</strong></p><p><strong>如何通过Nginx来实现代理？</strong> 在Nginx的<code>conf/nginx.conf</code>配置文件中，修改 <img src="https://cdn.nlark.com/yuque/0/2023/png/29136536/1685955206510-199ba2ab-d611-49c6-be30-42a58f34ab10.png#averageHue=%23fcfcfc&amp;clientId=u6e9378b7-976b-4&amp;from=paste&amp;height=615&amp;id=u6e48ca90&amp;originHeight=677&amp;originWidth=1231&amp;originalType=binary&amp;ratio=1.100000023841858&amp;rotation=0&amp;showTitle=false&amp;size=74470&amp;status=done&amp;style=none&amp;taskId=ud17472b1-ea95-4b8d-824f-92a7bf302bd&amp;title=&amp;width=1119.0908848352674" alt="image.png"> 源文件</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">worker_processes </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">events</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> worker_connections </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">http</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">      mime.types</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> default_type </span><span style="color:#A6ACCD;"> application/octet-stream</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> sendfile </span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;"> on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;"># 配置代理</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">shop-server</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 127.0.0.1:8080;</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;"># 端口</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">127.0.0.1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;"># 域名或ip</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;"># proxy_pass 使用代理</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">	proxy_pass </span><span style="color:#A6ACCD;">http://shop-server</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;"> index.html index.htm</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;"># 默认访问资源名称</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> error_page </span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">502</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">503</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">504</span><span style="color:#A6ACCD;">  /50x.html</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;"># 错误页面</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/50x.html </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">  html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p><strong>这样，反向代理就配置好了，当我们访问nginx时，nginx帮我们去寻找配置好的真实的服务器，服务器响应数据给Nginx，Nginx将数据再响应给客户端，客户端全程是无感的，只与Nginx进行交互。</strong> 当被代理的服务器只有一台时，看起来与正向代理差不多。</p><h1 id="负载均衡" tabindex="-1">负载均衡 <a class="header-anchor" href="#负载均衡" aria-label="Permalink to &quot;负载均衡&quot;">​</a></h1><p>负载均衡是反向代理的真正目的。 当Tomcat服务器只有一台时，肯定扛不住很高的请求，所以此时可以搭建Tomcat集群，然后利用Nginx来做负载均衡。 我们将Tomcat服务器的地址配置到Nginx中，客户端请求nginx，nginx在所有的Tomcat中挑选一台进行访问，然后将响应结果返回给客户端。 <em>如何在Nginx中配置负载均衡？</em> 刚才配置了反向代理，那么负载均衡就是我们多配几台Tomcat。 <img src="https://cdn.nlark.com/yuque/0/2023/png/29136536/1685956338607-ac58e614-f7ef-43f3-b53d-fedf641fb06a.png#averageHue=%23fdfdfc&amp;clientId=u6e9378b7-976b-4&amp;from=paste&amp;height=508&amp;id=ua6c6923a&amp;originHeight=559&amp;originWidth=1494&amp;originalType=binary&amp;ratio=1.100000023841858&amp;rotation=0&amp;showTitle=false&amp;size=48799&amp;status=done&amp;style=none&amp;taskId=ucd4102e6-3130-44ff-824a-d2c64e25d1e&amp;title=&amp;width=1358.1817887440207" alt="image.png"></p><h1 id="负载均衡策略" tabindex="-1">负载均衡策略 <a class="header-anchor" href="#负载均衡策略" aria-label="Permalink to &quot;负载均衡策略&quot;">​</a></h1><h2 id="轮询-默认" tabindex="-1">轮询（默认） <a class="header-anchor" href="#轮询-默认" aria-label="Permalink to &quot;轮询（默认）&quot;">​</a></h2><p>轮着来，挨个挨个分配，Nginx的默认策略。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">myserver </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.156.156:8080 ;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.156.163:8080 ;</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 127.0.0.1:80; </span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">208.208.128.122</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">  http://myserver</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;"> index.html index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span></code></pre></div><h2 id="权重分配" tabindex="-1">权重分配 <a class="header-anchor" href="#权重分配" aria-label="Permalink to &quot;权重分配&quot;">​</a></h2><p>给某个服务或全部服务配置了权重后，就开了权重策略。 权重越大，被访问的概率越大，只需要在配置文件中，通过weight属性来配置即可。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">myserver </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.156.156:8080 </span><span style="color:#A6ACCD;font-style:italic;">weight</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">;   </span><span style="color:#676E95;font-style:italic;">#  在这儿</span></span>
<span class="line"><span style="color:#A6ACCD;">        server 192.168.156.163:8080 </span><span style="color:#A6ACCD;font-style:italic;">weight</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">				server 127.0.0.1:80; </span><span style="color:#676E95;font-style:italic;"># 默认的权重是1</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">208.208.128.122</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">  http://myserver</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;"> index.html index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span></code></pre></div><p>服务器之间被访问的概率就是权重之比。 此时各个服务器之间被访问的概率就是<code>10:5:1</code></p><h2 id="ip-hash" tabindex="-1">ip_hash <a class="header-anchor" href="#ip-hash" aria-label="Permalink to &quot;ip_hash&quot;">​</a></h2><p>通过检查客户端的ip，计算得到一个结果，根据这个结果选择要访问的服务器 <strong>这样能保证，一个客户端，最终交互的服务器是同一个</strong></p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">myserver </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">ip_hash;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 设置策略</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.156.156:8080 ; </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.156.163:8080 ;</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 127.0.0.1:80; </span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">208.208.128.122</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">  http://myserver</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;"> index.html index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span></code></pre></div>`,49),e=[o];function t(c,r,i,C,y,A){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{m as __pageData,d as default};
